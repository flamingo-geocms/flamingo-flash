<?xml version="1.0" encoding="UTF-8"?>
<project name="flamingo-client" basedir=".">
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="ant-contrib-1.0b3.jar"/>
		</classpath>
	</taskdef>
	<tstamp>
		<format property="date" pattern="dd/MM/yyyy hh:mm aa"/>
	</tstamp>
	<property name="version" value="4.0"/>
	<property name="build" location="build"/>
	<property name="dist" location="../dist"/>
	<property name="srcDir" location="src"/>
	<property name="examplesDir" location="examples"/>
	<property name="flashPath" location="C:/Program Files (x86)/Adobe/Adobe Flash CS3"/>
	<property name="perlPath" value="perl"/>
	<property name="naturalDocsPath" location="C:/tools/NaturalDocs 1.52/NaturalDocs"/>
	<property name="naturalDocsProjectPath" location="NaturalDocsProj"/>
	<property name="CDGPath" location="CDGProj"/>
	<property name="docDir" location="doc"/>
	<target name="init-dirs">
		<mkdir dir="${build}"/>
		<mkdir dir="${build}/dist"/>
		<mkdir dir="${build}/bin"/>
		<mkdir dir="${dist}"/>
	</target>
	<target name="init" depends="init-dirs">
		<echo file="${build}/compileProject.jsfl" append="false">var flaURI="file:///${srcDir}";${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">var swfURI="file:///${build}/dist/flamingo";${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">var buildURI="file:///${build}";${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">execute();${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">function execute(){${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">var flaArray=new Array(); ${line.separator}</echo>
		<for param="file">
			<path>
				<fileset dir="${srcDir}" includes="**/*.fla"/>
			</path>
			<sequential>
				<echo file="${build}/compileProject.jsfl" append="true">flaArray.push("file:///@{file}");${line.separator}</echo>
			</sequential>
		</for>
		<replace file="${build}/compileProject.jsfl">
			<replacetoken>\</replacetoken>
			<replacevalue>/</replacevalue>
		</replace>
		<echo file="${build}/compileProject.jsfl" append="true">fl.outputPanel.clear(); ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">fl.outputPanel.trace("Start compile \n"); ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">fl.outputPanel.save(buildURI+"/compileProject.log", false); ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">for (var i=0;i&lt;flaArray.length;i++) { ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">var flaName = flaArray[i].substring(flaURI.length); ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">compile(flaURI+"/"+flaName); ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">var swfName = flaName.substr(0,flaName.lastIndexOf(".")+1)+"swf"; ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">var xmlName = flaName.substr(0,flaName.lastIndexOf(".")+1)+"xml"; ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">var swfFileName=swfName; ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">var ind=swfName.indexOf("/"); ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">var dir=""; ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">while(ind!=-1){ ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">var ind2=swfFileName.indexOf("/"); ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">dir+="/"+swfFileName.substring(0,ind2); ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">var swfPath = swfURI+dir; ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">if (FLfile.exists(swfPath)==false) { ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">FLfile.createFolder(swfPath); ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">}  ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">swfFileName = swfFileName.substring(ind2+1); ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">ind=swfFileName.indexOf("/"); ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">} ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">move(flaURI+"/"+swfName,swfURI+swfName,"swf"); ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">} ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">fl.outputPanel.clear(); ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">fl.outputPanel.trace("\nEnd compile"); ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">fl.outputPanel.save(buildURI+"/compileProject.log", true); ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">fl.quit();${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true"> } ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">function compile(p_fileURI,p_fileName) { ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true"> var doc = fl.openDocument(p_fileURI); ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">fl.outputPanel.clear(); ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">fl.outputPanel.trace("\nCompiling: " + p_fileURI); ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">fl.outputPanel.save(buildURI+"/compileProject.log", true); ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">doc.saveAndCompact(); ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">doc.publish(); ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">fl.outputPanel.save(buildURI+"/compileProject.log", true); ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">fl.closeDocument(fl.documents[0],false);  ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">} ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">function move(p_file,p_newName,type) { ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">FLfile.remove(p_newName); ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">FLfile.copy(p_file,p_newName); ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">if (FLfile.exists(p_newName) == true) { ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">if(type=="swf"){ ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">FLfile.remove(p_file); ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">} ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">} ${line.separator}</echo>
		<echo file="${build}/compileProject.jsfl" append="true">} ${line.separator}</echo>
	</target>
	<target name="compile" depends="init">
		<echo message="--------------- Compile project ---------------"/>
		<exec executable="${flashPath}/Flash">
			<arg value="${build}/compileProject.jsfl"/>
		</exec>
		<copy file="GNU-GPL_LICENSE.txt" todir="${build}/dist/flamingo"/>
		<copy file="${srcDir}/flamingo.xml" todir="${build}/dist/flamingo"/>
	</target>
	<target name="dist" depends="compile">
		<echo message="--------------- Building dist ---------------"/>
		<copy todir="${build}/dist/js">
			<fileset dir="js" includes="*.js"/>
		</copy>
		<copy todir="${build}/dist/flamingo/assets/img">
			<fileset dir="${srcDir}/assets/img" includes="*.*"/>
		</copy>
		<move todir="${build}/dist/assets">
			<fileset dir="${build}/dist/flamingo/assets"/>
		</move>
		<copy file="ReadMe.txt" todir="${build}/dist"/>
		<echo file="${build}/dist/flamingo/version.txt" append="false">version: ${version} date: ${date}</echo>
		<zip destfile="${dist}/flamingo_client.zip" basedir="${build}/dist"/>
	</target>
	<target name="release" depends="compile">
		<echo message="--------------- Building release ---------------"/>
		<mkdir dir="${build}/release"/>
		<copy todir="${build}/release">
			<fileset dir="${build}/dist"/>
		</copy>
		<copy todir="${build}/release/js">
			<fileset dir="js" includes="*.js"/>
		</copy>
		<copy todir="${build}/release/flamingo/assets/img">
			<fileset dir="${srcDir}/assets/img" includes="*.*"/>
		</copy>
		<copy file="changelog.txt" todir="${build}/dist"/>
		<delete dir="${build}/release/flamingo/tpc"/>
		<echo file="${build}/release/flamingo/version.txt" append="false">version: ${version} date: ${date}</echo>
		<antcall target="doc"/>
		<echo message="--------------- Copy Documentation ---------------"/>
		<copy todir="${build}/release/docs">
			<fileset dir="${build}/docs"/>
		</copy>
		<echo message="--------------- Copy Examples ---------------"/>
		<copy todir="${build}/release/examples">
			<fileset dir="${examplesDir}" excludes="*.svn*"/>
		</copy>
		<zip destfile="${build}/release/flamingo_${version}.zip" basedir="${build}/release"/>
	</target>
	<target name="doc" depends="init-dirs">
		<echo message=" --------------- Building Documentation ---------------"/>
		<mkdir dir="${build}/docs"/>
		<copy todir="${build}/docs">
			<fileset dir="${docDir}" excludes="*.svn*"/>
		</copy>
		<echo message="--------------- Create index page ---------------"/>
		<echo file="${build}/docs/index.html" append="false"><![CDATA[
			<html>
				<head>
					<title>Flamingo-MC Documentation (Version: ${version})</title>
					<link rel="stylesheet" href="conf-doc/style.css">
				</head>
				<body>
					<h1>Flamingo-MC Documentation (Version: ${version})</h1>
					<div class="blockContent">
						<p>
							<a href="conf-doc/index.html">Configuration Documentation</a>
						</p>
						<p>
							<a href="ref-doc/index.html">Reference Documentation (API docs)</a>
						</p>
					</div>
				</body>
				</html>
			]]></echo>
		<echo message=" --------------- Building Reference Documentation ---------------"/>
		<mkdir dir="${naturalDocsProjectPath}"/>
		<exec executable="${perlPath}">
			<arg line="'${naturalDocsPath}'"/>
			<arg line="-i ${srcDir}"/>
			<arg line="-o HTML  ${build}\docs\ref-doc"/>
			<arg line="-p ${naturalDocsProjectPath}"/>
		</exec>
		<echo message="--------------- Building Configuration Documentation ---------------"/>
		<mkdir dir="${build}/docs"/>
		<mkdir dir="${build}/docs/conf-doc"/>
		<java jar="${CDGPath}/Configuration_Documentation_Generator.jar" fork="true">
			<arg value="${srcDir}"/>
			<arg value="${build}/docs/conf-doc"/>
			<classpath>
				<pathelement location="${CDGPath}/Configuration_Documentation_Generator.jar"/>
				<pathelement path="${CDGPath}/libs"/>
			</classpath>
		</java>
	</target>
	<target name="clean">
		<delete dir="${build}"/>
		<delete dir="${naturalDocsProjectPath}/Data"/>
	</target>
</project>
